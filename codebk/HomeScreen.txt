package com.hackathon.offlinewallet.ui

import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.hilt.navigation.compose.hiltViewModel
import androidx.navigation.NavController

@Composable
fun HomeScreen(navController: NavController, authViewModel: AuthViewModel = hiltViewModel(), walletViewModel: WalletViewModel = hiltViewModel()) {
    val user by authViewModel.getUser(authViewModel.isLoggedIn()?.let { authViewModel.getUser(it).value?.email } ?: "").collectAsState()
    val wallet by walletViewModel.getWallet(user?.email ?: "").collectAsState()
    val isOnline by walletViewModel.isOnline.collectAsState()

    Column(
        modifier = Modifier.fillMaxSize().padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(text = "Offline Wallet", style = MaterialTheme.typography.headlineMedium)
        Spacer(modifier = Modifier.height(16.dp))
        Text(text = "Welcome, ${user?.username ?: "User"}")
        Text(text = "Status: ${if (isOnline) "Online" else "Offline"}")
        Text(text = "Balance: $${wallet?.balance ?: 0.0}")
        Spacer(modifier = Modifier.height(16.dp))
        Button(onClick = { navController.navigate("add_money") }) { Text("Add Money") }
        Button(onClick = { navController.navigate("send_money") }) { Text("Send Money") }
        Button(onClick = { navController.navigate("receive_money") }) { Text("Receive Money") }
        Button(onClick = { navController.navigate("merchant_payment") }) { Text("Pay Merchant") }
        Button(onClick = { navController.navigate("transactions") }) { Text("View Transactions") }
        Button(onClick = {
            authViewModel.logout()
            navController.navigate("login") {
                popUpTo("home") { inclusive = true }
            }
        }) { Text("Logout") }
    }
}